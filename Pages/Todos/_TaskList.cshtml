@using Htmx.TagHelpers
@using CodeMechanic.Types
@model List<CodeMechanic.Todoist.TodoistTask>

@{
    var priorities_select = Enumerable.Range(1, 4);
}

<ul>
    <li id="content"></li>
    @foreach (var (task, index) in Model.WithIndex())
    {
        <li class="grid grid-cols-1 gap-2 max-w-md border-error border-0" x-data="{show_updates:true}">
            <!-- <span>@index</span> -->
            <a target="_blank" href="@task.url" class="text-lg text-secondary truncate">
                @task.content
            </a>
            <div class="flex flex-row gap-1 items-center justify-start">
                <div class="flex-shrink ">

                    @foreach (var label in @task.labels)
                    {
                        <p class="badge badge-info max-w-12">@label</p>
                    }
                </div>

            </div>

            @if (task?.due != null && task.due.date.NotEmpty())
            {
                <b class="text-info">Due on: @task?.due?.date.ToDateTime(fallback: DateTime.Now)</b>
                @* <b>Due: @task.due.humanized</b> *@
                @* <b>age: @task.due.humanized_age</b> *@
            }
            @* <b class="text-success">Created on: @task.created_at.ToDateTime(fallback: DateTime.MinValue)</b> *@

            @if (@task.Age > 0)
            {
                <b class="text-error">Days Old: @Math.Round(@task.Age, 0)</b>
            }

            <div class="flex flex-row border-0 border-success">
                @* <button class="btn btn-accent btn-sm" x-on:click="show_updates=!show_updates">Actions</button> *@
                <div x-show="show_updates" class="flex flex-col">
                    <div class="form-control">
                        <label class="cursor-pointer label">
                            <span class="label-text">Complete</span>
                            @* hx-get="@Url.Page("Index", "ToggleCompleted", new { task_id = @task.id, completed = !@task.is_completed })" *@
                            <input
                                hx-trigger="change"
                                hx-get
                                hx-target="#content"
                                hx-page-handler="ToggleCompleted"
                                hx-vals='{"task_id": "@task.id", "completed": "True"}'
                                hx-swap="innerHTML"
                                type="checkbox"
                                class="checkbox checkbox-accent"/>
                        </label>
                    </div>

                    @* <form class="border-0" *@
                    @*       hx-get="@Url.Page("Index", "SetPriority", new { task_id = @task.id, priority = "4" })" *@
                    @*       hx-swap="innerHTML" *@
                    @*       hx-include='*' *@
                    @*       hx-target="#content" *@
                    @*       hx-trigger="input,change"> *@
                    @*     <input type="text" name="search" id="search"> *@
                    @*     <select name="category" id="category"> *@
                    @*         <option value="">All</option> *@
                    @*         @foreach (var priority in priorities_select) *@
                    @*         { *@
                    @*             <!--https://github.com/bigskysoftware/htmx/issues/1565 --> *@
                    @*             <option value="@task.id">@priority</option> *@
                    @*         } *@
                    @* *@
                    @*     </select> *@
                    @* </form> *@


                    @* <select id="options"> *@
                    @*     <option disabled selected>Choose Priority</option> *@
                    @* *@
                    @*     @foreach (var priority in priorities_select) *@
                    @*     { *@
                    @*         <option *@
                    @*             hx-trigger="change from:#options" *@
                    @*             hx-target="#content" *@
                    @*             hx-get="@Url.Page("Index", "SetPriority", new { task_id = @task.id, priority = @priority })" *@
                    @*             value="@priority"> *@
                    @*             @priority *@
                    @*         </option> *@
                    @*     } *@
                    @* </select> *@
                    @* *@

                </div>
            </div>
            @* <details class="text-info"> *@
            @*     <div class="flex flex-col items-center justify-center gap-4"> *@
            @*         <b>created on: @task.created_at</b> *@
            @*     </div> *@
            @* </details> *@
        </li>
    }
</ul>


<style>
    .truncate {
      width: 250px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
</style>