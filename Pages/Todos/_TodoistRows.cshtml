@using CodeMechanic.Todoist
@model List<CodeMechanic.Todoist.TodoistTask>
@{
    var rows = @Model;
}
@foreach (var row in rows)
{
    <tr x-data="{show_details: false}">
        <th>
            <label>
                <input type="checkbox" class="checkbox"/>
            </label>
        </th>
        <td>
            <div class="flex items-center gap-3">
                <div class="avatar">
                    <div class="bg-neutral text-neutral-content rounded-full w-12">
                        <span class="text-3xl">@row.content.ToUpperInvariant()[0]</span>
                    </div>
                </div>
                <div>
                    <div class="tooltip" data-tip="Visit">
                        <a target="_blank" href="@row.url">
                            <div class="font-bold text-secondary truncate">@row.content.Trim()</div>
                        </a>
                    </div>
                    <p class="text-sm opacity-50 text-primary">@row.project_id</p>
                </div>
            </div>
        </td>
        <td>
            <div class="flex flex-col justify-center">

                <label class="text-@row.priority_css ">
                    Priority:
                    <span class="">@row.priority.FixPriorityBug()</span>
                </label>
                <div>
                    @foreach (var label in @row.labels)
                    {
                        <span class="badge badge-secondary badge-sm lg:badge-lg">@label</span>
                    }
                </div>
            </div>
        </td>

        <td>
            <div class="flex flex-col gap-1 justify-center">

                @* @Math.Round(@row.Age, 0) *@
                @* <label for="">Friendly stuff</label> *@
                @* <p> created on: @row.created_at</p> *@
                @* <p> due: @row?.due?.date </p> *@

                <p> due: @row?.due?.humanized on @row?.due?.friendly_date
                <p> age: @row?.due?.humanized_age </p>
            </div>
        </td>

        @* <th> *@
        @* <template *@
        @* *@
        @*     x-if='false'> *@
        @* *@
        @*     <button *@
        @*         hx-get="@Url.Page("Index", "FindComment", new { task_id = row.id })" *@
        @*         hx-swap="innerHTML" *@
        @*         hx-target="#deets" *@
        @*         class="btn btn-ghost btn-xs" x-on:click="show_details=!show_details"> *@
        @*         Details *@
        @*     </button> *@
        @* *@
        @* </template> *@
        @* <span id="@row.id" *@
        @*       class="htmx-indicator"> *@
        @*     <label for="">loading comments ...</label> *@
        @*     <img alt="bars" src="~/img/bars.svg"/> *@
        @* </span> *@
        @* <td x-show="show_details"> *@
        @* *@
        @* *@
        @*     <span id="deets"></span> *@
        @*     $1$ hx-get #1# *@
        @*     $1$ hx-page="Index" #1# *@
        @*     $1$#1# *@
        @*     $1$  #1# *@
        @*     $1$ hx-page-handler="FindComment" #1# *@
        @*     $1$ <button #1# *@
        @*     $1$     hx-indicator="#@row.id" #1# *@
        @*     $1$     hx-trigger="init" #1# *@
        @*     $1$     hx-get="@Url.Page("Index", "FindComment")" #1# *@
        @*     $1$     hx-swap="outerHTML"> #1# *@
        @*     $1$     ... #1# *@
        @*     $1$ </button> #1# *@
        @* *@
        @* *@
        @* </td> *@
        @* <td>@row.is_completed</td> *@
    </tr>
}

<style>
    
    .truncate {
      width: 250px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
      
</style>